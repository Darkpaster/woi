import React, { useState } from 'react';
import { X, Star, Zap } from 'lucide-react';
import "../styles/professionsWindow.scss"

type Ability = {
    id: string;
    name: string;
    icon: string;
    description: string;
    type: 'passive' | 'active';
    unlocked: boolean;
    requiredLevel: number;
    cooldown?: number; // –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
    effect?: string; // –¥–ª—è –ø–∞—Å—Å–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
};

type Profession = {
    id: string;
    name: string;
    icon: string;
    level: number;
    currentExp: number;
    maxExp: number;
    description: string;
    abilities: Ability[];
};

const ProfessionsWindow: React.FC = () => {
    const [professions] = useState<Profession[]>([
        {
            id: 'alchemy',
            name: '–ê–ª—Ö–∏–º–∏—è',
            icon: 'üß™',
            level: 15,
            currentExp: 2450,
            maxExp: 3000,
            description: '–ò—Å–∫—É—Å—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–∏—è –∑–µ–ª–∏–π –∏ —ç–ª–∏–∫—Å–∏—Ä–æ–≤',
            abilities: [
                {
                    id: 'basic_potion',
                    name: '–ë–∞–∑–æ–≤–æ–µ –∑–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è',
                    icon: 'üíä',
                    description: '–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –∑–µ–ª—å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è',
                    type: 'active',
                    unlocked: true,
                    requiredLevel: 1,
                    cooldown: 5
                },
                {
                    id: 'herb_knowledge',
                    name: '–ó–Ω–∞–Ω–∏–µ —Ç—Ä–∞–≤',
                    icon: 'üåø',
                    description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–±–æ—Ä–∞ —Ç—Ä–∞–≤ –Ω–∞ 25%',
                    type: 'passive',
                    unlocked: true,
                    requiredLevel: 3,
                    effect: '+25% –∫ —Å–±–æ—Ä—É —Ç—Ä–∞–≤'
                },
                {
                    id: 'mana_potion',
                    name: '–ó–µ–ª—å–µ –º–∞–Ω—ã',
                    icon: 'üîÆ',
                    description: '–°–æ–∑–¥–∞–Ω–∏–µ –∑–µ–ª—å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –º–∞–≥–∏—á–µ—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏',
                    type: 'active',
                    unlocked: true,
                    requiredLevel: 8,
                    cooldown: 8
                },
                {
                    id: 'potion_mastery',
                    name: '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –∑–µ–ª–∏–π',
                    icon: '‚öóÔ∏è',
                    description: '–®–∞–Ω—Å —Å–æ–∑–¥–∞—Ç—å –¥–≤–æ–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–µ–ª–∏–π: 15%',
                    type: 'passive',
                    unlocked: true,
                    requiredLevel: 12,
                    effect: '15% —à–∞–Ω—Å —É–¥–≤–æ–µ–Ω–∏—è'
                },
                {
                    id: 'greater_healing',
                    name: '–í–µ–ª–∏–∫–æ–µ –∑–µ–ª—å–µ –ª–µ—á–µ–Ω–∏—è',
                    icon: 'üç∂',
                    description: '–°–æ–∑–¥–∞–Ω–∏–µ –º–æ—â–Ω–æ–≥–æ –∑–µ–ª—å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è',
                    type: 'active',
                    unlocked: true,
                    requiredLevel: 15,
                    cooldown: 12
                },
                {
                    id: 'poison_immunity',
                    name: '–ò–º–º—É–Ω–∏—Ç–µ—Ç –∫ —è–¥–∞–º',
                    icon: 'üõ°Ô∏è',
                    description: '–°–æ–∑–¥–∞–Ω–∏–µ –∑–µ–ª—å—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞ –∫ —è–¥–∞–º',
                    type: 'active',
                    unlocked: false,
                    requiredLevel: 20,
                    cooldown: 30
                }
            ]
        },
        {
            id: 'blacksmithing',
            name: '–ö—É–∑–Ω–µ—á–Ω–æ–µ –¥–µ–ª–æ',
            icon: 'üî®',
            level: 8,
            currentExp: 850,
            maxExp: 1200,
            description: '–ö–æ–≤–∫–∞ –æ—Ä—É–∂–∏—è –∏ –¥–æ—Å–ø–µ—Ö–æ–≤',
            abilities: [
                {
                    id: 'basic_sword',
                    name: '–ü—Ä–æ—Å—Ç–æ–π –º–µ—á',
                    icon: '‚öîÔ∏è',
                    description: '–ö–æ–≤–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –∂–µ–ª–µ–∑–Ω–æ–≥–æ –º–µ—á–∞',
                    type: 'active',
                    unlocked: true,
                    requiredLevel: 1,
                    cooldown: 15
                },
                {
                    id: 'metal_efficiency',
                    name: '–≠–∫–æ–Ω–æ–º–∏—è –º–µ—Ç–∞–ª–ª–∞',
                    icon: 'üíé',
                    description: '–°–Ω–∏–∂–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø—Ä–∏ –∫–æ–≤–∫–µ –Ω–∞ 10%',
                    type: 'passive',
                    unlocked: true,
                    requiredLevel: 5,
                    effect: '-10% —Ä–∞—Å—Ö–æ–¥ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤'
                },
                {
                    id: 'armor_crafting',
                    name: '–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å–ø–µ—Ö–æ–≤',
                    icon: 'üõ°Ô∏è',
                    description: '–ö–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –¥–æ—Å–ø–µ—Ö–æ–≤ –∏–∑ –∂–µ–ª–µ–∑–∞',
                    type: 'active',
                    unlocked: true,
                    requiredLevel: 8,
                    cooldown: 25
                },
                {
                    id: 'steel_working',
                    name: '–†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç–∞–ª—å—é',
                    icon: '‚õèÔ∏è',
                    description: '–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–ª—å–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –ø–æ–≤—ã—à–µ–Ω–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞',
                    type: 'active',
                    unlocked: false,
                    requiredLevel: 12,
                    cooldown: 20
                }
            ]
        },
        {
            id: 'enchanting',
            name: '–ó–∞—á–∞—Ä–æ–≤–∞–Ω–∏–µ',
            icon: '‚ú®',
            level: 12,
            currentExp: 1800,
            maxExp: 2100,
            description: '–ù–∞–ª–æ–∂–µ–Ω–∏–µ –º–∞–≥–∏—á–µ—Å–∫–∏—Ö —á–∞—Ä –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç—ã',
            abilities: [
                {
                    id: 'basic_enchant',
                    name: '–ë–∞–∑–æ–≤–æ–µ –∑–∞—á–∞—Ä–æ–≤–∞–Ω–∏–µ',
                    icon: 'üí´',
                    description: '–ù–∞–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö —á–∞—Ä –Ω–∞ –æ—Ä—É–∂–∏–µ',
                    type: 'active',
                    unlocked: true,
                    requiredLevel: 1,
                    cooldown: 10
                },
                {
                    id: 'mana_efficiency',
                    name: '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º–∞–Ω—ã',
                    icon: 'üîµ',
                    description: '–°–Ω–∏–∂–∞–µ—Ç –∑–∞—Ç—Ä–∞—Ç—ã –º–∞–Ω—ã –Ω–∞ –∑–∞—á–∞—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ 20%',
                    type: 'passive',
                    unlocked: true,
                    requiredLevel: 6,
                    effect: '-20% –∑–∞—Ç—Ä–∞—Ç—ã –º–∞–Ω—ã'
                },
                {
                    id: 'armor_enchant',
                    name: '–ó–∞—á–∞—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å–ø–µ—Ö–æ–≤',
                    icon: 'üõ°Ô∏è',
                    description: '–ù–∞–ª–æ–∂–µ–Ω–∏–µ –∑–∞—â–∏—Ç–Ω—ã—Ö —á–∞—Ä –Ω–∞ –¥–æ—Å–ø–µ—Ö–∏',
                    type: 'active',
                    unlocked: true,
                    requiredLevel: 10,
                    cooldown: 15
                },
                {
                    id: 'enchant_mastery',
                    name: '–ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –∑–∞—á–∞—Ä–æ–≤–∞–Ω–∏—è',
                    icon: '‚≠ê',
                    description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∏–ª—É –≤—Å–µ—Ö –∑–∞—á–∞—Ä–æ–≤–∞–Ω–∏–π –Ω–∞ 30%',
                    type: 'passive',
                    unlocked: true,
                    requiredLevel: 12,
                    effect: '+30% —Å–∏–ª–∞ –∑–∞—á–∞—Ä–æ–≤–∞–Ω–∏–π'
                }
            ]
        },
        {
            id: 'cooking',
            name: '–ö—É–ª–∏–Ω–∞—Ä–∏—è',
            icon: 'üç≥',
            level: 6,
            currentExp: 450,
            maxExp: 800,
            description: '–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –ø–∏—â–∏ –∏ –Ω–∞–ø–∏—Ç–∫–æ–≤',
            abilities: [
                {
                    id: 'basic_meal',
                    name: '–ü—Ä–æ—Å—Ç–∞—è –µ–¥–∞',
                    icon: 'üçû',
                    description: '–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –ø–∏—â–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å—ã—Ç–æ—Å—Ç–∏',
                    type: 'active',
                    unlocked: true,
                    requiredLevel: 1,
                    cooldown: 3
                },
                {
                    id: 'ingredient_knowledge',
                    name: '–ó–Ω–∞–Ω–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤',
                    icon: 'üìñ',
                    description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –≥–æ—Ç–æ–≤—ã—Ö –±–ª—é–¥ –Ω–∞ 15%',
                    type: 'passive',
                    unlocked: true,
                    requiredLevel: 4,
                    effect: '+15% –∫–∞—á–µ—Å—Ç–≤–æ –±–ª—é–¥'
                },
                {
                    id: 'hearty_stew',
                    name: '–°—ã—Ç–Ω–æ–µ —Ä–∞–≥—É',
                    icon: 'üç≤',
                    description: '–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–∞–≥—É —Å –±–æ–Ω—É—Å–∞–º–∏',
                    type: 'active',
                    unlocked: true,
                    requiredLevel: 6,
                    cooldown: 8
                },
                {
                    id: 'master_chef',
                    name: '–ú–∞—Å—Ç–µ—Ä-–ø–æ–≤–∞—Ä',
                    icon: 'üë®‚Äçüç≥',
                    description: '–®–∞–Ω—Å –Ω–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –ø—Ä–∏ –≥–æ—Ç–æ–≤–∫–µ: 25%',
                    type: 'passive',
                    unlocked: false,
                    requiredLevel: 10,
                    effect: '25% —à–∞–Ω—Å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'
                }
            ]
        }
    ]);

    const [activeProfession, setActiveProfession] = useState(professions[0].id);
    const [selectedAbility, setSelectedAbility] = useState<Ability | null>(null);

    const currentProfession = professions.find(p => p.id === activeProfession)!;
    const expPercentage = (currentProfession.currentExp / currentProfession.maxExp) * 100;

    const useAbility = (abilityId: string) => {
        console.log(`–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å ${abilityId}`);
    };

    const getAbilityTypeIcon = (type: 'passive' | 'active') => {
        return type === 'active' ? <Zap size={14} /> : <Star size={14} />;
    };

    return (
        <div className="profession-window">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –≤–∫–ª–∞–¥–∫–∞–º–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π */}
            <div className="profession-window__header">
                <div className="profession-window__tabs">
                    {professions.map(profession => (
                        <div
                            key={profession.id}
                            className={`profession-tab ${
                                activeProfession === profession.id ? 'profession-tab--active' : ''
                            }`}
                            onClick={() => {
                                setActiveProfession(profession.id);
                                setSelectedAbility(null);
                            }}
                        >
                            <div className="profession-tab__icon">{profession.icon}</div>
                            <div className="profession-tab__info">
                                <div className="profession-tab__name">{profession.name}</div>
                                <div className="profession-tab__level">–£—Ä. {profession.level}</div>
                            </div>
                        </div>
                    ))}
                </div>
                <div className="profession-window__close">
                    <X size={20} />
                </div>
            </div>

            <div className="profession-window__body">
                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ */}
                <div className="profession-window__info">
                    <div className="profession-info">
                        <div className="profession-info__header">
                            <div className="profession-info__icon">{currentProfession.icon}</div>
                            <div className="profession-info__details">
                                <h2 className="profession-info__name">{currentProfession.name}</h2>
                                <p className="profession-info__description">{currentProfession.description}</p>
                            </div>
                        </div>

                        <div className="profession-info__progress">
                            <div className="level-info">
                                <span className="level-info__current">–£—Ä–æ–≤–µ–Ω—å {currentProfession.level}</span>
                                <span className="level-info__exp">
                                    {currentProfession.currentExp} / {currentProfession.maxExp} –æ–ø—ã—Ç–∞
                                </span>
                            </div>
                            <div className="exp-bar">
                                <div
                                    className="exp-bar__fill"
                                    style={{ width: `${expPercentage}%` }}
                                />
                            </div>
                        </div>
                    </div>
                </div>

                {/* –°–ø–∏—Å–æ–∫ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π */}
                <div className="profession-window__abilities">
                    <div className="abilities-section">
                        <h3 className="abilities-section__title">–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏</h3>
                        <div className="abilities-grid">
                            {currentProfession.abilities
                                .filter(ability => ability.type === 'active')
                                .map(ability => (
                                    <div
                                        key={ability.id}
                                        className={`ability-card ${
                                            ability.unlocked ? 'ability-card--unlocked' : 'ability-card--locked'
                                        } ${selectedAbility?.id === ability.id ? 'ability-card--selected' : ''}`}
                                        onClick={() => setSelectedAbility(ability)}
                                    >
                                        <div className="ability-card__icon">{ability.icon}</div>
                                        <div className="ability-card__info">
                                            <div className="ability-card__name">{ability.name}</div>
                                            <div className="ability-card__level">–£—Ä. {ability.requiredLevel}</div>
                                        </div>
                                        <div className="ability-card__type">
                                            {getAbilityTypeIcon(ability.type)}
                                        </div>
                                    </div>
                                ))}
                        </div>
                    </div>

                    <div className="abilities-section">
                        <h3 className="abilities-section__title">–ü–∞—Å—Å–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏</h3>
                        <div className="abilities-grid">
                            {currentProfession.abilities
                                .filter(ability => ability.type === 'passive')
                                .map(ability => (
                                    <div
                                        key={ability.id}
                                        className={`ability-card ${
                                            ability.unlocked ? 'ability-card--unlocked' : 'ability-card--locked'
                                        } ${selectedAbility?.id === ability.id ? 'ability-card--selected' : ''}`}
                                        onClick={() => setSelectedAbility(ability)}
                                    >
                                        <div className="ability-card__icon">{ability.icon}</div>
                                        <div className="ability-card__info">
                                            <div className="ability-card__name">{ability.name}</div>
                                            <div className="ability-card__level">–£—Ä. {ability.requiredLevel}</div>
                                        </div>
                                        <div className="ability-card__type">
                                            {getAbilityTypeIcon(ability.type)}
                                        </div>
                                    </div>
                                ))}
                        </div>
                    </div>
                </div>

                {/* –î–µ—Ç–∞–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ */}
                {selectedAbility && (
                    <div className="profession-window__details">
                        <div className="ability-details">
                            <div className="ability-details__header">
                                <div className="ability-details__icon">{selectedAbility.icon}</div>
                                <div className="ability-details__info">
                                    <h3 className="ability-details__name">{selectedAbility.name}</h3>
                                    <div className="ability-details__meta">
                                        <span className={`ability-type ability-type--${selectedAbility.type}`}>
                                            {getAbilityTypeIcon(selectedAbility.type)}
                                            {selectedAbility.type === 'active' ? '–ê–∫—Ç–∏–≤–Ω–∞—è' : '–ü–∞—Å—Å–∏–≤–Ω–∞—è'}
                                        </span>
                                        <span className="ability-level">–¢—Ä–µ–±—É–µ—Ç —É—Ä. {selectedAbility.requiredLevel}</span>
                                    </div>
                                </div>
                            </div>

                            <div className="ability-details__description">
                                {selectedAbility.description}
                            </div>

                            {selectedAbility.type === 'active' && selectedAbility.cooldown && (
                                <div className="ability-details__cooldown">
                                    <strong>–í—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:</strong> {selectedAbility.cooldown} —Å–µ–∫
                                </div>
                            )}

                            {selectedAbility.type === 'passive' && selectedAbility.effect && (
                                <div className="ability-details__effect">
                                    <strong>–≠—Ñ—Ñ–µ–∫—Ç:</strong> {selectedAbility.effect}
                                </div>
                            )}

                            {selectedAbility.unlocked && selectedAbility.type === 'active' && (
                                <button
                                    className="ability-details__use-btn"
                                    onClick={() => useAbility(selectedAbility.id)}
                                >
                                    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
                                </button>
                            )}

                            {!selectedAbility.unlocked && (
                                <div className="ability-details__locked">
                                    –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±—É–¥–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ {selectedAbility.requiredLevel} —É—Ä–æ–≤–Ω–µ
                                </div>
                            )}
                        </div>
                    </div>
                )}
            </div>
        </div>
    );
};

export default ProfessionsWindow;