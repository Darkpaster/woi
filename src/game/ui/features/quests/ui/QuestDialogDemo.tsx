// –î–µ–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
import React, {useState} from "react";
import {QuestDecision, QuestDialog} from "./QuestDialog";
import {QuestNodeType} from "../../../../core/logic/quests/questNode.ts";

import "../styles/questDialog.scss"


interface QuestNode {
    id: string;
    description: string;
    type: QuestNodeType;
    decisions: QuestDecision[];
    characterName?: string;
    characterPortrait?: string;
}

// –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ
const demoNodes: QuestNode[] = [
    {
        id: 'intro',
        description: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ø—É—Ç–Ω–∏–∫! –Ø –≠–ª–¥–µ—Ä –ú–∞—Ä–∫, —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å –¥—Ä–µ–≤–Ω–∏—Ö –∑–Ω–∞–Ω–∏–π. –í–∏–∂—É, —Ç—ã –Ω–æ–≤–∏—á–æ–∫ –≤ –Ω–∞—à–∏—Ö –∫—Ä–∞—è—Ö. –ù–µ –∂–µ–ª–∞–µ—à—å –ª–∏ –ø–æ–º–æ—á—å —Å—Ç–∞—Ä–∏–∫—É —Å –Ω–µ–±–æ–ª—å—à–∏–º –ø–æ—Ä—É—á–µ–Ω–∏–µ–º?',
        type: QuestNodeType.DIALOGUE,
        characterName: '–≠–ª–¥–µ—Ä –ú–∞—Ä–∫',
        characterPortrait: 'üßô‚Äç‚ôÇÔ∏è',
        decisions: [
            {
                id: 'accept',
                text: '–ö–æ–Ω–µ—á–Ω–æ, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?',
                nextNodeId: 'task_explain',
                isAvailable: true
            },
            {
                id: 'refuse',
                text: '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —É –º–µ–Ω—è –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏.',
                nextNodeId: 'refuse_response',
                isAvailable: true
            },
            {
                id: 'ask_reward',
                text: '–ê —á—Ç–æ –º–Ω–µ –∑–∞ —ç—Ç–æ –±—É–¥–µ—Ç?',
                nextNodeId: 'reward_explain',
                isAvailable: true
            }
        ]
    },
    {
        id: 'task_explain',
        description: '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –í–∏–¥–∏—à—å –ª–∏, –≤ —Å—Ç–∞—Ä–æ–π –±–∞—à–Ω–µ –Ω–∞ –≤–æ—Å—Ç–æ–∫–µ –∑–∞–≤–µ–ª–∏—Å—å –∫—Ä—ã—Å—ã. –û–Ω–∏ –ø–æ—Ä—Ç—è—Ç –º–æ–∏ –¥—Ä–µ–≤–Ω–∏–µ —Å–≤–∏—Ç–∫–∏. –ü—Ä–∏–Ω–µ—Å–∏ –º–Ω–µ 5 –∫—Ä—ã—Å–∏–Ω—ã—Ö —Ö–≤–æ—Å—Ç–æ–≤, –∏ —è —â–µ–¥—Ä–æ –æ—Ç–±–ª–∞–≥–æ–¥–∞—Ä—é —Ç–µ–±—è.',
        type: QuestNodeType.DIALOGUE,
        characterName: '–≠–ª–¥–µ—Ä –ú–∞—Ä–∫',
        characterPortrait: 'üßô‚Äç‚ôÇÔ∏è',
        decisions: [
            {
                id: 'accept_task',
                text: '–ü–æ–Ω—è–ª, —Å–¥–µ–ª–∞—é —ç—Ç–æ!',
                nextNodeId: 'end',
                isAvailable: true
            },
            {
                id: 'ask_details',
                text: '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–∞—à–Ω–µ.',
                nextNodeId: 'tower_details',
                isAvailable: true
            }
        ]
    },
    {
        id: 'refuse_response',
        description: '–ü–æ–Ω–∏–º–∞—é, –º–æ–ª–æ–¥–æ—Å—Ç—å –≤—Å–µ–≥–¥–∞ —Ç–æ—Ä–æ–ø–∏—Ç—Å—è. –ù–æ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å - —è –±—É–¥—É –∑–¥–µ—Å—å. –î—Ä–µ–≤–Ω–∏–µ —Ç–∞–π–Ω—ã –Ω–∏–∫—É–¥–∞ –Ω–µ –¥–µ–Ω—É—Ç—Å—è.',
        type: QuestNodeType.DIALOGUE,
        characterName: '–≠–ª–¥–µ—Ä –ú–∞—Ä–∫',
        characterPortrait: 'üßô‚Äç‚ôÇÔ∏è',
        decisions: [
            {
                id: 'end_conversation',
                text: '–î–æ —Å–≤–∏–¥–∞–Ω–∏—è.',
                nextNodeId: 'end',
                isAvailable: true
            },
            {
                id: 'reconsider',
                text: '–ü–æ–¥–æ–∂–¥–∏—Ç–µ, —è –ø–µ—Ä–µ–¥—É–º–∞–ª...',
                nextNodeId: 'intro',
                isAvailable: true
            }
        ]
    },
    {
        id: 'reward_explain',
        description: '–ê—Ö, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥! –ú–Ω–µ —ç—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è. –ó–∞ —Ç–≤–æ—é –ø–æ–º–æ—â—å —è –¥–∞–º —Ç–µ–±–µ 100 –∑–æ–ª–æ—Ç—ã—Ö –º–æ–Ω–µ—Ç –∏ –∑–µ–ª—å–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è. –î–æ—Å—Ç–æ–π–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø—Ä–æ—Å—Ç—É—é —Ä–∞–±–æ—Ç—É, –Ω–µ —Ç–∞–∫ –ª–∏?',
        type: QuestNodeType.DIALOGUE,
        characterName: '–≠–ª–¥–µ—Ä –ú–∞—Ä–∫',
        characterPortrait: 'üßô‚Äç‚ôÇÔ∏è',
        decisions: [
            {
                id: 'accept_with_reward',
                text: '–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ, —è —Å–æ–≥–ª–∞—Å–µ–Ω!',
                nextNodeId: 'task_explain',
                isAvailable: true
            },
            {
                id: 'negotiate',
                text: '–ú–æ–∂–Ω–æ –ª–∏ —É–≤–µ–ª–∏—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É?',
                nextNodeId: 'negotiate_response',
                isAvailable: false,
                tooltip: '–¢—Ä–µ–±—É–µ—Ç—Å—è: –ù–∞–≤—ã–∫ —Ç–æ—Ä–≥–æ–≤–ª–∏ 15+'
            }
        ]
    }
];


const QuestDialogDemo: React.FC = () => {
    const [currentNodeId, setCurrentNodeId] = useState<string>('intro');
    const [isDialogVisible, setIsDialogVisible] = useState<boolean>(false);

    const currentNode = demoNodes.find(node => node.id === currentNodeId);

    const handleDecisionSelect = (decision: QuestDecision) => {
        console.log('Selected decision:', decision);

        if (decision.nextNodeId === 'end') {
            setIsDialogVisible(false);
            return;
        }

        const nextNode = demoNodes.find(node => node.id === decision.nextNodeId);
        if (nextNode) {
            setCurrentNodeId(decision.nextNodeId);
        }
    };

    const handleCloseDialog = () => {
        setIsDialogVisible(false);
    };

    const startDialog = () => {
        setCurrentNodeId('intro');
        setIsDialogVisible(true);
    };

    return (
        <div className="demo-container" style={{position: "relative", zIndex: 99999}}>
            <div className="demo-background">
                <h1>Quest Dialog System</h1>
                <button className="demo-button" onClick={startDialog}>
                    –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å NPC
                </button>

                <div className="demo-info">
                    <h3>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:</h3>
                    <ul>
                        <li>–ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω —Å –±–ª—é—Ä–æ–º</li>
                        <li>–ü–æ—Ä—Ç—Ä–µ—Ç –∏ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</li>
                        <li>–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ —Å —É—Å–ª–æ–≤–∏—è–º–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏</li>
                        <li>–ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤</li>
                        <li>–ü–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è</li>
                        <li>–ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –¥–∏–∞–ª–æ–≥–∞</li>
                    </ul>
                </div>
            </div>

            {currentNode && (
                <QuestDialog
                    node={currentNode}
                    isVisible={isDialogVisible}
                    onDecisionSelect={handleDecisionSelect}
                    onClose={handleCloseDialog}
                />
            )}
        </div>
    );
};

export default QuestDialogDemo;